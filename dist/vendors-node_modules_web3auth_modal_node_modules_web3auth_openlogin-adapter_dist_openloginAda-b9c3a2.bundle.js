"use strict";
(self["webpackChunkcosmos_nft"] = self["webpackChunkcosmos_nft"] || []).push([["vendors-node_modules_web3auth_modal_node_modules_web3auth_openlogin-adapter_dist_openloginAda-b9c3a2"],{

/***/ "./node_modules/@web3auth/modal/node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/modal/node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenloginAdapter": function() { return /* binding */ OpenloginAdapter; },
/* harmony export */   "getOpenloginDefaultOptions": function() { return /* binding */ getOpenloginDefaultOptions; }
/* harmony export */ });
/* harmony import */ var _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @toruslabs/openlogin */ "./node_modules/@toruslabs/openlogin/dist/openlogin.esm.js");
/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3auth/base */ "./node_modules/@web3auth/base/dist/base.esm.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/esm/get.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @web3auth/base-provider */ "./node_modules/@web3auth/base-provider/dist/baseProvider.esm.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lodash.merge */ "./node_modules/lodash.merge/index.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_13__);















var getOpenloginDefaultOptions = function getOpenloginDefaultOptions(chainNamespace, chainId) {
  return {
    adapterSettings: {
      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.OPENLOGIN_NETWORK.MAINNET,
      clientId: "",
      uxMode: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.UX_MODE.POPUP
    },
    chainConfig: chainNamespace ? (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.getChainConfig)(chainNamespace, chainId) : null,
    loginSettings: {}
  };
};

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var OpenloginAdapter = /*#__PURE__*/function (_BaseAdapter) {
  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__["default"])(OpenloginAdapter, _BaseAdapter);
  var _super = _createSuper(OpenloginAdapter);
  function OpenloginAdapter(params) {
    var _params$chainConfig, _params$chainConfig2, _params$adapterSettin, _params$chainConfig3;
    var _this;
    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, OpenloginAdapter);
    _this = _super.call(this);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "name", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "adapterNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_NAMESPACES.MULTICHAIN);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "type", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_CATEGORY.IN_APP);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "openloginInstance", null);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "clientId", void 0);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "status", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.NOT_READY);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "currentChainNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.EIP155);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "openloginOptions", void 0);
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "loginSettings", {});
    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_10__["default"])((0,_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__["default"])(_this), "privKeyProvider", null);
    _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug("const openlogin adapter", params);
    var defaultOptions = getOpenloginDefaultOptions((_params$chainConfig = params.chainConfig) === null || _params$chainConfig === void 0 ? void 0 : _params$chainConfig.chainNamespace, (_params$chainConfig2 = params.chainConfig) === null || _params$chainConfig2 === void 0 ? void 0 : _params$chainConfig2.chainId);
    _this.openloginOptions = _objectSpread(_objectSpread({
      clientId: "",
      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.OPENLOGIN_NETWORK.MAINNET
    }, defaultOptions.adapterSettings), params.adapterSettings || {});
    _this.clientId = (_params$adapterSettin = params.adapterSettings) === null || _params$adapterSettin === void 0 ? void 0 : _params$adapterSettin.clientId;
    _this.loginSettings = _objectSpread(_objectSpread({}, defaultOptions.loginSettings), params.loginSettings);
    _this.sessionTime = _this.loginSettings.sessionTime || 86400;
    // if no chainNamespace is passed then chain config should be set before calling init
    if ((_params$chainConfig3 = params.chainConfig) !== null && _params$chainConfig3 !== void 0 && _params$chainConfig3.chainNamespace) {
      var _params$chainConfig4;
      _this.currentChainNamespace = (_params$chainConfig4 = params.chainConfig) === null || _params$chainConfig4 === void 0 ? void 0 : _params$chainConfig4.chainNamespace;
      var defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};
      _this.chainConfig = _objectSpread(_objectSpread({}, defaultChainIdConfig), params === null || params === void 0 ? void 0 : params.chainConfig);
      _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug("const openlogin chainConfig", _this.chainConfig);
      if (!_this.chainConfig.rpcTarget && params.chainConfig.chainNamespace !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.OTHER) {
        throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams("rpcTarget is required in chainConfig");
      }
    }
    return _this;
  }
  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OpenloginAdapter, [{
    key: "chainConfigProxy",
    get: function get() {
      return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;
    }
  }, {
    key: "provider",
    get: function get() {
      var _this$privKeyProvider;
      return ((_this$privKeyProvider = this.privKeyProvider) === null || _this$privKeyProvider === void 0 ? void 0 : _this$privKeyProvider.provider) || null;
    },
    set: function set(_) {
      throw new Error("Not implemented");
    }
  }, {
    key: "init",
    value: function () {
      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee(options) {
        var _this$openloginOption;
        var isRedirectResult, redirectResult;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_6__["default"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__["default"])(OpenloginAdapter.prototype), "checkInitializationRequirements", this).call(this);
                if ((_this$openloginOption = this.openloginOptions) !== null && _this$openloginOption !== void 0 && _this$openloginOption.clientId) {
                  _context.next = 3;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams("clientId is required before openlogin's initialization");
              case 3:
                if (this.chainConfig) {
                  _context.next = 5;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams("chainConfig is required before initialization");
              case 5:
                isRedirectResult = false;
                if (this.openloginOptions.uxMode === _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.UX_MODE.REDIRECT) {
                  redirectResult = (0,_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.getHashQueryParams)();
                  if (Object.keys(redirectResult).length > 0 && redirectResult._pid) {
                    isRedirectResult = true;
                  }
                }
                this.openloginOptions = _objectSpread(_objectSpread({}, this.openloginOptions), {}, {
                  replaceUrlOnRedirect: isRedirectResult
                });
                this.openloginInstance = new _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__["default"](this.openloginOptions);
                _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug("initializing openlogin adapter init");
                _context.next = 12;
                return this.openloginInstance.init();
              case 12:
                this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;
                this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN);
                _context.prev = 14;
                _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.debug("initializing openlogin adapter");
                // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true
                if (!(this.openloginInstance.privKey && (options.autoConnect || isRedirectResult))) {
                  _context.next = 19;
                  break;
                }
                _context.next = 19;
                return this.connect();
              case 19:
                _context.next = 25;
                break;
              case 21:
                _context.prev = 21;
                _context.t0 = _context["catch"](14);
                _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.error("Failed to connect with cached openlogin provider", _context.t0);
                this.emit("ERRORED", _context.t0);
              case 25:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[14, 21]]);
      }));
      function init(_x) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "connect",
    value: function () {
      var _connect = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee2(params) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_6__["default"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__["default"])(OpenloginAdapter.prototype), "checkConnectionRequirements", this).call(this);
                this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTING;
                this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {
                  adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN
                }));
                _context2.prev = 3;
                _context2.next = 6;
                return this.connectWithProvider(params);
              case 6:
                return _context2.abrupt("return", this.provider);
              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](3);
                _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.log.error("Failed to connect with openlogin provider", _context2.t0);
                // ready again to be connected
                this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;
                this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.ERRORED, _context2.t0);
                if (!(_context2.t0 !== null && _context2.t0 !== void 0 && _context2.t0.message.includes("user closed popup"))) {
                  _context2.next = 16;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.popupClosed();
              case 16:
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.connectionError("Failed to login with openlogin");
              case 17:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[3, 9]]);
      }));
      function connect(_x2) {
        return _connect.apply(this, arguments);
      }
      return connect;
    }()
  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee3() {
        var options,
          _args3 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {
                  cleanup: false
                };
                if (!(this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED)) {
                  _context3.next = 3;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.notConnectedError("Not connected with wallet");
              case 3:
                if (this.openloginInstance) {
                  _context3.next = 5;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady("openloginInstance is not ready");
              case 5:
                _context3.next = 7;
                return this.openloginInstance.logout();
              case 7:
                if (options.cleanup) {
                  this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.NOT_READY;
                  this.openloginInstance = null;
                  this.privKeyProvider = null;
                } else {
                  // ready to be connected again
                  this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY;
                }
                this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.DISCONNECTED);
              case 9:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function disconnect() {
        return _disconnect.apply(this, arguments);
      }
      return disconnect;
    }()
  }, {
    key: "authenticateUser",
    value: function () {
      var _authenticateUser = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee4() {
        var userInfo;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED)) {
                  _context4.next = 2;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first");
              case 2:
                _context4.next = 4;
                return this.getUserInfo();
              case 4:
                userInfo = _context4.sent;
                return _context4.abrupt("return", {
                  idToken: userInfo.idToken
                });
              case 6:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function authenticateUser() {
        return _authenticateUser.apply(this, arguments);
      }
      return authenticateUser;
    }()
  }, {
    key: "getUserInfo",
    value: function () {
      var _getUserInfo = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee5() {
        var userInfo;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED)) {
                  _context5.next = 2;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletLoginError.notConnectedError("Not connected with wallet");
              case 2:
                if (this.openloginInstance) {
                  _context5.next = 4;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady("openloginInstance is not ready");
              case 4:
                _context5.next = 6;
                return this.openloginInstance.getUserInfo();
              case 6:
                userInfo = _context5.sent;
                return _context5.abrupt("return", userInfo);
              case 8:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function getUserInfo() {
        return _getUserInfo.apply(this, arguments);
      }
      return getUserInfo;
    }() // should be called only before initialization.
  }, {
    key: "setAdapterSettings",
    value: function setAdapterSettings(adapterSettings) {
      if (this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.READY) return;
      var defaultOptions = getOpenloginDefaultOptions();
      this.openloginOptions = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions.adapterSettings), this.openloginOptions || {}), adapterSettings);
      if (adapterSettings.sessionTime) {
        this.loginSettings = _objectSpread(_objectSpread({}, this.loginSettings), {}, {
          sessionTime: adapterSettings.sessionTime
        });
      }
      if (adapterSettings.clientId) {
        this.clientId = adapterSettings.clientId;
      }
    }
    // should be called only before initialization.
  }, {
    key: "setChainConfig",
    value: function setChainConfig(customChainConfig) {
      (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_6__["default"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__["default"])(OpenloginAdapter.prototype), "setChainConfig", this).call(this, customChainConfig);
      this.currentChainNamespace = customChainConfig.chainNamespace;
    }
  }, {
    key: "connectWithProvider",
    value: function () {
      var _connectWithProvider = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().mark(function _callee6() {
        var params,
          _yield$import,
          SolanaPrivateKeyProvider,
          _yield$import2,
          EthereumPrivateKeyProvider,
          _params$extraLoginOpt,
          finalPrivKey,
          _yield$import3,
          getED25519Key,
          _args6 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_11___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                params = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};
                if (this.chainConfig) {
                  _context6.next = 3;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.invalidParams("chainConfig is required before initialization");
              case 3:
                if (this.openloginInstance) {
                  _context6.next = 5;
                  break;
                }
                throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WalletInitializationError.notReady("openloginInstance is not ready");
              case 5:
                if (!(this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.SOLANA)) {
                  _context6.next = 13;
                  break;
                }
                _context6.next = 8;
                return Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_toruslabs_tweetnacl-js_nacl-fast_js"), __webpack_require__.e("vendors-node_modules_web3auth_solana-provider_dist_solanaProvider_esm_js"), __webpack_require__.e("_51ea-_da88-_6c05-_1ce7-_866b")]).then(__webpack_require__.bind(__webpack_require__, /*! @web3auth/solana-provider */ "./node_modules/@web3auth/solana-provider/dist/solanaProvider.esm.js"));
              case 8:
                _yield$import = _context6.sent;
                SolanaPrivateKeyProvider = _yield$import.SolanaPrivateKeyProvider;
                this.privKeyProvider = new SolanaPrivateKeyProvider({
                  config: {
                    chainConfig: this.chainConfig
                  }
                });
                _context6.next = 26;
                break;
              case 13:
                if (!(this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.EIP155)) {
                  _context6.next = 21;
                  break;
                }
                _context6.next = 16;
                return Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_web3auth_ethereum-provider_dist_ethereumProvider_esm_js"), __webpack_require__.e("_54b3-_0b7d-_2b6a-_dba7")]).then(__webpack_require__.bind(__webpack_require__, /*! @web3auth/ethereum-provider */ "./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js"));
              case 16:
                _yield$import2 = _context6.sent;
                EthereumPrivateKeyProvider = _yield$import2.EthereumPrivateKeyProvider;
                this.privKeyProvider = new EthereumPrivateKeyProvider({
                  config: {
                    chainConfig: this.chainConfig
                  }
                });
                _context6.next = 26;
                break;
              case 21:
                if (!(this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.OTHER)) {
                  _context6.next = 25;
                  break;
                }
                this.privKeyProvider = new _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_12__.CommonPrivateKeyProvider();
                _context6.next = 26;
                break;
              case 25:
                throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace, " found while connecting to wallet"));
              case 26:
                if (this.openloginInstance.privKey) {
                  _context6.next = 30;
                  break;
                }
                if (!this.loginSettings.curve) {
                  this.loginSettings.curve = this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.SOLANA ? _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.SUPPORTED_KEY_CURVES.ED25519 : _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.SUPPORTED_KEY_CURVES.SECP256K1;
                }
                _context6.next = 30;
                return this.openloginInstance.login(lodash_merge__WEBPACK_IMPORTED_MODULE_13___default()(this.loginSettings, params, {
                  loginProvider: params.loginProvider
                }, {
                  extraLoginOptions: _objectSpread(_objectSpread({}, params.extraLoginOptions || {}), {}, {
                    login_hint: params.login_hint || ((_params$extraLoginOpt = params.extraLoginOptions) === null || _params$extraLoginOpt === void 0 ? void 0 : _params$extraLoginOpt.login_hint)
                  })
                }));
              case 30:
                finalPrivKey = this.openloginInstance.privKey;
                if (!finalPrivKey) {
                  _context6.next = 42;
                  break;
                }
                if (!(this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.CHAIN_NAMESPACES.SOLANA)) {
                  _context6.next = 38;
                  break;
                }
                _context6.next = 35;
                return Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_toruslabs_tweetnacl-js_nacl-fast_js"), __webpack_require__.e("node_modules_toruslabs_openlogin-ed25519_dist_openloginEd25519_esm_js")]).then(__webpack_require__.bind(__webpack_require__, /*! @toruslabs/openlogin-ed25519 */ "./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js"));
              case 35:
                _yield$import3 = _context6.sent;
                getED25519Key = _yield$import3.getED25519Key;
                finalPrivKey = getED25519Key(finalPrivKey).sk.toString("hex");
              case 38:
                _context6.next = 40;
                return this.privKeyProvider.setupProvider(finalPrivKey);
              case 40:
                this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_STATUS.CONNECTED;
                this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.ADAPTER_EVENTS.CONNECTED, {
                  adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.WALLET_ADAPTERS.OPENLOGIN,
                  reconnected: !params
                });
              case 42:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function connectWithProvider() {
        return _connectWithProvider.apply(this, arguments);
      }
      return connectWithProvider;
    }()
  }]);
  return OpenloginAdapter;
}(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.BaseAdapter);


//# sourceMappingURL=openloginAdapter.esm.js.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_web3auth_modal_node_modules_web3auth_openlogin-adapter_dist_openloginAda-b9c3a2.bundle.js.map