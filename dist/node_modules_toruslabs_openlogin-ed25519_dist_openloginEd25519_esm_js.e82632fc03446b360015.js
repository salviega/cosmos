/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcosmos_nft"] = self["webpackChunkcosmos_nft"] || []).push([["node_modules_toruslabs_openlogin-ed25519_dist_openloginEd25519_esm_js"],{

/***/ "./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getED25519Key\": function() { return /* binding */ getED25519Key; }\n/* harmony export */ });\n/* harmony import */ var _toruslabs_tweetnacl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @toruslabs/tweetnacl-js */ \"./node_modules/@toruslabs/tweetnacl-js/nacl-fast.js\");\n/* harmony import */ var _toruslabs_tweetnacl_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_tweetnacl_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst l = (_toruslabs_tweetnacl_js__WEBPACK_IMPORTED_MODULE_0___default().lowlevel);\nfunction getED25519Key(privateKey) {\n  let privKey;\n\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  } // Implementation copied from tweetnacl\n\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return {\n    sk: Buffer.from(sk),\n    pk: Buffer.from(pk)\n  };\n}\n\n\n//# sourceMappingURL=openloginEd25519.esm.js.map\n\n\n//# sourceURL=webpack://cosmos-nft/./node_modules/@toruslabs/openlogin-ed25519/dist/openloginEd25519.esm.js?");

/***/ }),

/***/ "?1ce7":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function() {

eval("/* (ignored) */\n\n//# sourceURL=webpack://cosmos-nft/crypto_(ignored)?");

/***/ })

}]);