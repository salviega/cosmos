{"version":3,"file":"vendors-node_modules_web3auth_modal_node_modules_web3auth_openlogin-adapter_dist_openloginAda-b9c3a2.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuH;AACiG;AAChJ;AACJ;AACN;AACoB;AACpC;AACU;AACkC;AACtB;AACA;AACP;AACM;AAClC;;AAEjC;AACA;AACA;AACA,eAAe,2EAAyB;AACxC;AACA,cAAc,+DAAa;AAC3B,KAAK;AACL,kCAAkC,8DAAc;AAChD;AACA;AACA;;AAEA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,kFAAe,6BAA6B,oKAAoK,mFAAmF,KAAK;AAC1e,iCAAiC,6DAA6D,yCAAyC,YAAY,iFAAe,mBAAmB,iCAAiC,gBAAgB,iFAAe,oBAAoB,2DAA2D,OAAO,yCAAyC,OAAO,4FAA0B;AACrZ,uCAAuC,wEAAwE,0CAA0C,8CAA8C,MAAM,4EAA4E,IAAI,eAAe,YAAY;AACxT;AACA,EAAE,2EAAS;AACX;AACA;AACA;AACA;AACA,IAAI,iFAAe;AACnB;AACA,IAAI,kFAAe,CAAC,wFAAsB,iBAAiB,qEAAyB;AACpF,IAAI,kFAAe,CAAC,wFAAsB,6BAA6B,yEAA6B;AACpG,IAAI,kFAAe,CAAC,wFAAsB,iBAAiB,mEAAuB;AAClF,IAAI,kFAAe,CAAC,wFAAsB;AAC1C,IAAI,kFAAe,CAAC,wFAAsB;AAC1C,IAAI,kFAAe,CAAC,wFAAsB,mBAAmB,oEAAwB;AACrF,IAAI,kFAAe,CAAC,wFAAsB,kCAAkC,mEAAuB;AACnG,IAAI,kFAAe,CAAC,wFAAsB;AAC1C,IAAI,kFAAe,CAAC,wFAAsB,4BAA4B;AACtE,IAAI,kFAAe,CAAC,wFAAsB;AAC1C,IAAI,qDAAS;AACb;AACA;AACA;AACA,eAAe,2EAAyB;AACxC,KAAK,+DAA+D;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,MAAM,qDAAS;AACf,gFAAgF,kEAAsB;AACtG,cAAc,mFAAuC;AACrD;AACA;AACA;AACA;AACA,EAAE,8EAAY;AACd;AACA;AACA,gDAAgD;AAChD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kBAAkB,mFAAiB,eAAe,uEAAwB;AAC1E;AACA;AACA,eAAe,uEAAwB;AACvC;AACA;AACA;AACA,gBAAgB,sEAAI,CAAC,iFAAe;AACpC;AACA;AACA;AACA;AACA,sBAAsB,mFAAuC;AAC7D;AACA;AACA;AACA;AACA;AACA,sBAAsB,mFAAuC;AAC7D;AACA;AACA,qDAAqD,kEAAgB;AACrE,mCAAmC,wEAAkB;AACrD;AACA;AACA;AACA;AACA,sEAAsE,4BAA4B;AAClG;AACA,iBAAiB;AACjB,6CAA6C,4DAAS;AACtD,gBAAgB,qDAAS;AACzB;AACA;AACA;AACA,8BAA8B,gEAAoB;AAClD,0BAA0B,gEAAoB,EAAE,qEAAyB;AACzE;AACA,gBAAgB,qDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,qBAAqB,mFAAiB,eAAe,uEAAwB;AAC7E,eAAe,uEAAwB;AACvC;AACA;AACA;AACA,gBAAgB,sEAAI,CAAC,iFAAe;AACpC,8BAA8B,qEAAyB;AACvD,0BAA0B,qEAAyB,gCAAgC,aAAa;AAChG,2BAA2B,qEAAyB;AACpD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAS;AACzB;AACA,8BAA8B,gEAAoB;AAClD,0BAA0B,kEAAsB;AAChD;AACA;AACA;AACA;AACA,sBAAsB,wEAA4B;AAClD;AACA,sBAAsB,4EAAgC;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,wBAAwB,mFAAiB,eAAe,uEAAwB;AAChF;AACA;AACA,eAAe,uEAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oEAAwB;AAC9D;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA;AACA;AACA;AACA;AACA,gCAAgC,oEAAwB;AACxD;AACA;AACA,kBAAkB;AAClB;AACA,gCAAgC,gEAAoB;AACpD;AACA,0BAA0B,uEAA2B;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,8BAA8B,mFAAiB,eAAe,uEAAwB;AACtF;AACA,eAAe,uEAAwB;AACvC;AACA;AACA;AACA,sCAAsC,oEAAwB;AAC9D;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,yBAAyB,mFAAiB,eAAe,uEAAwB;AACjF;AACA,eAAe,uEAAwB;AACvC;AACA;AACA;AACA,sCAAsC,oEAAwB;AAC9D;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,0BAA0B,gEAAoB;AAC9C;AACA,0EAA0E,8DAA8D;AACxI;AACA,2DAA2D,yBAAyB;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,MAAM,sEAAI,CAAC,iFAAe;AAC1B;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC,mFAAiB,eAAe,uEAAwB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mFAAuC;AAC7D;AACA;AACA;AACA;AACA;AACA,sBAAsB,8EAAkC;AACxD;AACA,qDAAqD,mEAAuB;AAC5E;AACA;AACA;AACA;AACA,uBAAuB,saAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qDAAqD,mEAAuB;AAC5E;AACA;AACA;AACA;AACA,uBAAuB,uVAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qDAAqD,kEAAsB;AAC3E;AACA;AACA;AACA,2CAA2C,8EAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,mEAAuB,GAAG,8EAA4B,GAAG,gFAA8B;AACnK;AACA;AACA,oDAAoD,oDAAK;AACzD;AACA,iBAAiB;AACjB,mEAAmE,gCAAgC,KAAK;AACxG;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mEAAuB;AAC5E;AACA;AACA;AACA;AACA,uBAAuB,mXAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAwB;AACtD,0BAA0B,oEAAwB;AAClD,2BAA2B,qEAAyB;AACpD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC,CAAC,uDAAW;;AAE2C;AACxD","sources":["webpack://cosmos-nft/./node_modules/@web3auth/modal/node_modules/@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js"],"sourcesContent":["import OpenLogin, { OPENLOGIN_NETWORK, UX_MODE, getHashQueryParams, SUPPORTED_KEY_CURVES } from '@toruslabs/openlogin';\nimport { getChainConfig, WALLET_ADAPTERS, ADAPTER_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, CHAIN_NAMESPACES, log, WalletInitializationError, ADAPTER_EVENTS, WalletLoginError, BaseAdapter } from '@web3auth/base';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { CommonPrivateKeyProvider } from '@web3auth/base-provider';\nimport merge from 'lodash.merge';\n\nvar getOpenloginDefaultOptions = function getOpenloginDefaultOptions(chainNamespace, chainId) {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP\n    },\n    chainConfig: chainNamespace ? getChainConfig(chainNamespace, chainId) : null,\n    loginSettings: {}\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar OpenloginAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(OpenloginAdapter, _BaseAdapter);\n  var _super = _createSuper(OpenloginAdapter);\n  function OpenloginAdapter(params) {\n    var _params$chainConfig, _params$chainConfig2, _params$adapterSettin, _params$chainConfig3;\n    var _this;\n    _classCallCheck(this, OpenloginAdapter);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.OPENLOGIN);\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.MULTICHAIN);\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.IN_APP);\n    _defineProperty(_assertThisInitialized(_this), \"openloginInstance\", null);\n    _defineProperty(_assertThisInitialized(_this), \"clientId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n    _defineProperty(_assertThisInitialized(_this), \"openloginOptions\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"loginSettings\", {});\n    _defineProperty(_assertThisInitialized(_this), \"privKeyProvider\", null);\n    log.debug(\"const openlogin adapter\", params);\n    var defaultOptions = getOpenloginDefaultOptions((_params$chainConfig = params.chainConfig) === null || _params$chainConfig === void 0 ? void 0 : _params$chainConfig.chainNamespace, (_params$chainConfig2 = params.chainConfig) === null || _params$chainConfig2 === void 0 ? void 0 : _params$chainConfig2.chainId);\n    _this.openloginOptions = _objectSpread(_objectSpread({\n      clientId: \"\",\n      network: OPENLOGIN_NETWORK.MAINNET\n    }, defaultOptions.adapterSettings), params.adapterSettings || {});\n    _this.clientId = (_params$adapterSettin = params.adapterSettings) === null || _params$adapterSettin === void 0 ? void 0 : _params$adapterSettin.clientId;\n    _this.loginSettings = _objectSpread(_objectSpread({}, defaultOptions.loginSettings), params.loginSettings);\n    _this.sessionTime = _this.loginSettings.sessionTime || 86400;\n    // if no chainNamespace is passed then chain config should be set before calling init\n    if ((_params$chainConfig3 = params.chainConfig) !== null && _params$chainConfig3 !== void 0 && _params$chainConfig3.chainNamespace) {\n      var _params$chainConfig4;\n      _this.currentChainNamespace = (_params$chainConfig4 = params.chainConfig) === null || _params$chainConfig4 === void 0 ? void 0 : _params$chainConfig4.chainNamespace;\n      var defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      _this.chainConfig = _objectSpread(_objectSpread({}, defaultChainIdConfig), params === null || params === void 0 ? void 0 : params.chainConfig);\n      log.debug(\"const openlogin chainConfig\", _this.chainConfig);\n      if (!_this.chainConfig.rpcTarget && params.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n    return _this;\n  }\n  _createClass(OpenloginAdapter, [{\n    key: \"chainConfigProxy\",\n    get: function get() {\n      return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n    }\n  }, {\n    key: \"provider\",\n    get: function get() {\n      var _this$privKeyProvider;\n      return ((_this$privKeyProvider = this.privKeyProvider) === null || _this$privKeyProvider === void 0 ? void 0 : _this$privKeyProvider.provider) || null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        var _this$openloginOption;\n        var isRedirectResult, redirectResult;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(OpenloginAdapter.prototype), \"checkInitializationRequirements\", this).call(this);\n                if ((_this$openloginOption = this.openloginOptions) !== null && _this$openloginOption !== void 0 && _this$openloginOption.clientId) {\n                  _context.next = 3;\n                  break;\n                }\n                throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n              case 3:\n                if (this.chainConfig) {\n                  _context.next = 5;\n                  break;\n                }\n                throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n              case 5:\n                isRedirectResult = false;\n                if (this.openloginOptions.uxMode === UX_MODE.REDIRECT) {\n                  redirectResult = getHashQueryParams();\n                  if (Object.keys(redirectResult).length > 0 && redirectResult._pid) {\n                    isRedirectResult = true;\n                  }\n                }\n                this.openloginOptions = _objectSpread(_objectSpread({}, this.openloginOptions), {}, {\n                  replaceUrlOnRedirect: isRedirectResult\n                });\n                this.openloginInstance = new OpenLogin(this.openloginOptions);\n                log.debug(\"initializing openlogin adapter init\");\n                _context.next = 12;\n                return this.openloginInstance.init();\n              case 12:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n                _context.prev = 14;\n                log.debug(\"initializing openlogin adapter\");\n                // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n                if (!(this.openloginInstance.privKey && (options.autoConnect || isRedirectResult))) {\n                  _context.next = 19;\n                  break;\n                }\n                _context.next = 19;\n                return this.connect();\n              case 19:\n                _context.next = 25;\n                break;\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](14);\n                log.error(\"Failed to connect with cached openlogin provider\", _context.t0);\n                this.emit(\"ERRORED\", _context.t0);\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[14, 21]]);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(OpenloginAdapter.prototype), \"checkConnectionRequirements\", this).call(this);\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {\n                  adapter: WALLET_ADAPTERS.OPENLOGIN\n                }));\n                _context2.prev = 3;\n                _context2.next = 6;\n                return this.connectWithProvider(params);\n              case 6:\n                return _context2.abrupt(\"return\", this.provider);\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](3);\n                log.error(\"Failed to connect with openlogin provider\", _context2.t0);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                if (!(_context2.t0 !== null && _context2.t0 !== void 0 && _context2.t0.message.includes(\"user closed popup\"))) {\n                  _context2.next = 16;\n                  break;\n                }\n                throw WalletLoginError.popupClosed();\n              case 16:\n                throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 9]]);\n      }));\n      function connect(_x2) {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var options,\n          _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context3.next = 3;\n                  break;\n                }\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n              case 3:\n                if (this.openloginInstance) {\n                  _context3.next = 5;\n                  break;\n                }\n                throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n              case 5:\n                _context3.next = 7;\n                return this.openloginInstance.logout();\n              case 7:\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.openloginInstance = null;\n                  this.privKeyProvider = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"authenticateUser\",\n    value: function () {\n      var _authenticateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n              case 2:\n                _context4.next = 4;\n                return this.getUserInfo();\n              case 4:\n                userInfo = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  idToken: userInfo.idToken\n                });\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function authenticateUser() {\n        return _authenticateUser.apply(this, arguments);\n      }\n      return authenticateUser;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context5.next = 2;\n                  break;\n                }\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n              case 2:\n                if (this.openloginInstance) {\n                  _context5.next = 4;\n                  break;\n                }\n                throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n              case 4:\n                _context5.next = 6;\n                return this.openloginInstance.getUserInfo();\n              case 6:\n                userInfo = _context5.sent;\n                return _context5.abrupt(\"return\", userInfo);\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n      return getUserInfo;\n    }() // should be called only before initialization.\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(adapterSettings) {\n      if (this.status === ADAPTER_STATUS.READY) return;\n      var defaultOptions = getOpenloginDefaultOptions();\n      this.openloginOptions = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions.adapterSettings), this.openloginOptions || {}), adapterSettings);\n      if (adapterSettings.sessionTime) {\n        this.loginSettings = _objectSpread(_objectSpread({}, this.loginSettings), {}, {\n          sessionTime: adapterSettings.sessionTime\n        });\n      }\n      if (adapterSettings.clientId) {\n        this.clientId = adapterSettings.clientId;\n      }\n    }\n    // should be called only before initialization.\n  }, {\n    key: \"setChainConfig\",\n    value: function setChainConfig(customChainConfig) {\n      _get(_getPrototypeOf(OpenloginAdapter.prototype), \"setChainConfig\", this).call(this, customChainConfig);\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n    }\n  }, {\n    key: \"connectWithProvider\",\n    value: function () {\n      var _connectWithProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var params,\n          _yield$import,\n          SolanaPrivateKeyProvider,\n          _yield$import2,\n          EthereumPrivateKeyProvider,\n          _params$extraLoginOpt,\n          finalPrivKey,\n          _yield$import3,\n          getED25519Key,\n          _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                params = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n                if (this.chainConfig) {\n                  _context6.next = 3;\n                  break;\n                }\n                throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n              case 3:\n                if (this.openloginInstance) {\n                  _context6.next = 5;\n                  break;\n                }\n                throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n              case 5:\n                if (!(this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA)) {\n                  _context6.next = 13;\n                  break;\n                }\n                _context6.next = 8;\n                return import('@web3auth/solana-provider');\n              case 8:\n                _yield$import = _context6.sent;\n                SolanaPrivateKeyProvider = _yield$import.SolanaPrivateKeyProvider;\n                this.privKeyProvider = new SolanaPrivateKeyProvider({\n                  config: {\n                    chainConfig: this.chainConfig\n                  }\n                });\n                _context6.next = 26;\n                break;\n              case 13:\n                if (!(this.currentChainNamespace === CHAIN_NAMESPACES.EIP155)) {\n                  _context6.next = 21;\n                  break;\n                }\n                _context6.next = 16;\n                return import('@web3auth/ethereum-provider');\n              case 16:\n                _yield$import2 = _context6.sent;\n                EthereumPrivateKeyProvider = _yield$import2.EthereumPrivateKeyProvider;\n                this.privKeyProvider = new EthereumPrivateKeyProvider({\n                  config: {\n                    chainConfig: this.chainConfig\n                  }\n                });\n                _context6.next = 26;\n                break;\n              case 21:\n                if (!(this.currentChainNamespace === CHAIN_NAMESPACES.OTHER)) {\n                  _context6.next = 25;\n                  break;\n                }\n                this.privKeyProvider = new CommonPrivateKeyProvider();\n                _context6.next = 26;\n                break;\n              case 25:\n                throw new Error(\"Invalid chainNamespace: \".concat(this.currentChainNamespace, \" found while connecting to wallet\"));\n              case 26:\n                if (this.openloginInstance.privKey) {\n                  _context6.next = 30;\n                  break;\n                }\n                if (!this.loginSettings.curve) {\n                  this.loginSettings.curve = this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA ? SUPPORTED_KEY_CURVES.ED25519 : SUPPORTED_KEY_CURVES.SECP256K1;\n                }\n                _context6.next = 30;\n                return this.openloginInstance.login(merge(this.loginSettings, params, {\n                  loginProvider: params.loginProvider\n                }, {\n                  extraLoginOptions: _objectSpread(_objectSpread({}, params.extraLoginOptions || {}), {}, {\n                    login_hint: params.login_hint || ((_params$extraLoginOpt = params.extraLoginOptions) === null || _params$extraLoginOpt === void 0 ? void 0 : _params$extraLoginOpt.login_hint)\n                  })\n                }));\n              case 30:\n                finalPrivKey = this.openloginInstance.privKey;\n                if (!finalPrivKey) {\n                  _context6.next = 42;\n                  break;\n                }\n                if (!(this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA)) {\n                  _context6.next = 38;\n                  break;\n                }\n                _context6.next = 35;\n                return import('@toruslabs/openlogin-ed25519');\n              case 35:\n                _yield$import3 = _context6.sent;\n                getED25519Key = _yield$import3.getED25519Key;\n                finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n              case 38:\n                _context6.next = 40;\n                return this.privKeyProvider.setupProvider(finalPrivKey);\n              case 40:\n                this.status = ADAPTER_STATUS.CONNECTED;\n                this.emit(ADAPTER_EVENTS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.OPENLOGIN,\n                  reconnected: !params\n                });\n              case 42:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function connectWithProvider() {\n        return _connectWithProvider.apply(this, arguments);\n      }\n      return connectWithProvider;\n    }()\n  }]);\n  return OpenloginAdapter;\n}(BaseAdapter);\n\nexport { OpenloginAdapter, getOpenloginDefaultOptions };\n//# sourceMappingURL=openloginAdapter.esm.js.map\n"],"names":[],"sourceRoot":""}